program versionitis;{  Control version  Copyright (C) 2018 Reinier Romero Mir  nenirey@gmail.com  This library is free software; you can redistribute it and/or modify it  under the terms of the GNU Library General Public License as published by  the Free Software Foundation; either version 2 of the License.  This program is distributed in the hope that it will be useful, but WITHOUT  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License  for more details.  You should have received a copy of the GNU Library General Public License  along with this library; if not, write to the Free Software Foundation,  Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.}{$mode objfpc}{$H+}uses  {$IFDEF UNIX}{$IFDEF UseCThreads}  cthreads,  {$ENDIF}{$ENDIF}  Classes, SysUtils  { you can add units after this };var  tmpstr, tmplb, newlb, contenido, majorstr, minorstr, revisionstr, buildstr, versioninfo, versionback:string;  proyecto:TStringList;  plaintext:TextFile;  p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14:integer;{$R *.res}begin//writeln('Implementacion multiplataforma de versiones de aplicaciones GUI');  proyecto:=TStringList.Create;  proyecto.LoadFromFile('src'+pathdelim+'awgg.lpi');  contenido:=proyecto.Text;  p1:=Pos('<VersionInfo>',contenido)+13;  p2:=Pos('</VersionInfo>',contenido);  versioninfo:=Copy(contenido,p1,p2-p1);  p3:=Pos('<MajorVersionNr Value="',versioninfo);  if p3<>0 then  begin    p3+=23;    tmpstr:=Copy(versioninfo,p3,Length(versioninfo));    p4:=Pos('"/>',tmpstr);    majorstr:=Copy(tmpstr,0,p4-1);  end  else    majorstr:='0';  p5:=Pos('<MinorVersionNr Value="',versioninfo);  if p5<>0 then  begin    p5+=23;    tmpstr:=Copy(versioninfo,p5,Length(versioninfo));    p6:=Pos('"/>',tmpstr);    minorstr:=Copy(tmpstr,0,p6-1);  end  else    minorstr:='0';  p7:=Pos('<RevisionNr Value="',versioninfo);  if p7<>0 then  begin    p7+=19;    tmpstr:=Copy(versioninfo,p7,Length(versioninfo));    p8:=Pos('"/>',tmpstr);    revisionstr:=Copy(tmpstr,0,p8-1);  end  else    revisionstr:='0';  p9:=Pos('<BuildNr Value="',versioninfo);  if p9<>0 then  begin    p9+=16;    tmpstr:=Copy(versioninfo,p9,Length(versioninfo));    p10:=Pos('"/>',tmpstr);    buildstr:=Copy(tmpstr,0,p10-1);  end  else    buildstr:='0';  versioninfo:=majorstr+'.'+minorstr+'.'+revisionstr+'.'+buildstr;//writeln('Version:',majorstr);//writeln('MinorVersion:',minorstr);//writeln('Revision:',revisionstr);//writeln('Bulid:',buildstr);//writeln('Complete version: ',versioninfo);  proyecto.Free;  proyecto:=TStringList.Create;  proyecto.Add('unit versionitis;');  proyecto.Add('interface');  proyecto.Add('var version:string='''+versioninfo+''';');  proyecto.Add('var fpcversion:string={$I %FPCVERSION%};');  proyecto.Add('var targetcpu:string={$I %FPCTARGETCPU%};');  proyecto.Add('var targetos:string={$I %FPCTARGETOS%};');  proyecto.Add('implementation');  proyecto.Add('begin');  proyecto.Add('end.');  proyecto.SaveToFile('src'+pathdelim+'versionitis.pas');  proyecto.Free;//proyecto:=TStringList.Create;//proyecto.Add(versioninfo);  assign(plaintext,'version');  Rewrite(plaintext);  write(plaintext,versioninfo);  Close(plaintext);//proyecto.SaveToFile('version');//proyecto.Free;  if Paramstr(1) = '-verbose' then  begin    writeln('Actualizando hacia la version:',versioninfo);    sleep(3000);  end;end.